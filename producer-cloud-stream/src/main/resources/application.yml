server:
  servlet:
    context-path: /
  port: 9080
logging:
  level:
    root: INFO
    com.xabe.spring.cloud.stream: INFO
    org.springframework.cloud.stream: INFO
    org.springframework.core.log: DEBUG

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: producer
  cloud:
    schemaRegistryClient:
      enabled: true
    stream:
      schema:
        avro:
          subjectNamingStrategy: com.xabe.spring.cloud.stream.producer.infrastructure.config.SubjectNamingStrategy
          dynamicSchemaGenerationEnabled: true
      schemaRegistryClient:
        endpoint: http://localhost:8081
        cached: true
      kafka:
        bindings:
          producer-car-out:
            producer:
              messageKeyExpression: headers['partitionKey']
      binders:
        kafka-pipe:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder:
              configuration:
                compression.type: gzip
              producer-properties:
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                schema.registry.url: http://localhost:8081
                enable.idempotence: true
                retries: 10
                request.timeout.ms: 30000
                client.id: producer
                max.block.ms: 1000
                linger.ms: 20
                batch.size: 32768
                use.latest.version: true
              consumer-properties:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                schema.registry.url: http://localhost:8081
                request.timeout.ms: 30000
                specific.avro.reader: true
                client.id: consumer
                use.latest.version: true
              autoAddPartitions: true
              autoCreateTopics: true
              minPartitionCount: 3
              defaultBrokerPort: 9092
              requiredAcks: all
              brokers:
                - localhost
      bindings:
        producer-car-out:
          binder: kafka-pipe
          destination: car.v1
          content-type: application/*+avro
          producer:
            partitionCount: ${producer.partitioncount:3}
            useNativeEncoding: true